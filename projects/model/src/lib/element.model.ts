export enum BacklogElementTypeCode {
    AUDIO = 'AUDIO',
    DOCUMENT = 'DOCUMENT',
    IMAGE = 'IMAGE',
    VIDEO = 'VIDEO',
}

export enum BacklogElementTypeId {
    AUDIO = 1,
    DOCUMENT = 2,
    IMAGE = 3,
    VIDEO = 4,
}

export interface BacklogElementType {
    id: number;
    code: BacklogElementTypeCode;
}

export declare type BacklogElementTypes = BacklogElementType[];

export const BacklogElementMediaType: Map<BacklogElementTypeId, string> = new Map([
    [BacklogElementTypeId.DOCUMENT, 'text/markdown, text/plain, text/xml, text/html, application/pdf'],
    [BacklogElementTypeId.AUDIO, 'audio/webm, audio/wave, audio/wav, audio/x-wav, audio/x-pn-wav'],
    [BacklogElementTypeId.IMAGE, 'image/jpeg, image/png'],
    [BacklogElementTypeId.VIDEO, 'video/mp4, video/webm']
]);


export interface BacklogElement {
    id?: number; // generated by the backend
    title: string;
    description: string;
    creationDate?: Date; // could be generated
    levelId: number;
    userId: number;
    typeId: number;
    metadata: Map<string, string>;
}

export declare type BacklogElements = Array<BacklogElement>;



export interface LocalBacklogElement extends BacklogElement {
    content: string;
}


export interface RemoteBacklogElement extends BacklogElement {
    content?: File;
    url: string;
    transcription?: string;
}


export interface DocumentElement extends BacklogElement {
    content: string;
}

export interface ImageElement extends BacklogElement {
    url: string;
    transcription: string;
}

export interface VideoElement extends BacklogElement {
    url: string;
    transcription: string;
}

